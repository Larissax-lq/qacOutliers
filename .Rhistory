library(Routliers)
univOutliers <- function(data, x, y, method="mahalanobis", ...){
if(method=="mahalanobis"){
#create a matrix from x and y variables
mat <- matrix(data[[x]], data[[y]])
#run matrix on function and store results
results <- outliers_mahalanobis(x=mat, alpha=alpha,na.rm=T)
}
multiOutliers <- function(data, x, y, method="mahalanobis", ...){
if(method=="mahalanobis"){
#create a matrix from x and y variables
mat <- matrix(data[[x]], data[[y]])
#run matrix on function and store results
results <- outliers_mahalanobis(x=mat, alpha=alpha,na.rm=T)
}
mutliOutliers(mtcars, "mpg", "cyl", method="mahalanobis", alpha=0.01, na.rm=T)
multiOutliers <- function(data, x, y, method="mahalanobis", ...){
if(method=="mahalanobis"){
#create a matrix from x and y variables
mat <- matrix(data[[x]], data[[y]])
#run matrix on function and store results
results <- outliers_mahalanobis(x=mat, alpha=alpha,na.rm=T)
}
multiOutliers(mtcars, "mpg", "cyl", method="mahalanobis", alpha=0.01, na.rm=T)
matrix(mtcars$mpg, mtcars$cyl)
data(Attacks)
SOC <- rowMeans(Attacks[,c("soc1r","soc2r","soc3r","soc4","soc5","soc6","soc7r",
"soc8","soc9","soc10r","soc11","soc12","soc13")])
HSC <- rowMeans(Attacks[,22:46])
res <- outliers_mahalanobis(x = cbind(SOC,HSC), na.rm = TRUE)
cbind(SOC, HSC)
data(mtcars)
force(mtcars)
View(mtcars)
multiOutliers <- function(data, x, y, method="mahalanobis", ...){
if(method=="mahalanobis"){
#select just the rows given by the user
subset <- data %>%
select(.data[[x]], .data[[y]])
#make this into a matrix
mat <- matrix(subset)
#run matrix on function and store results
results <- outliers_mahalanobis(x=mat, alpha=alpha,na.rm=T)
}
multiOutliers(mtcars, "cyl", "mpg", method="mahalanobis")
library(tidyverse)
multiOutliers(mtcars, "cyl", "mpg", method="mahalanobis")
multiOutliers <- function(data, x, y, method="mahalanobis", ...){
if(method=="mahalanobis"){
#select just the rows given by the user
subset <- data %>%
select(.data[[x]], .data[[y]])
#make this into a matrix
mat <- matrix(subset)
#run matrix on function and store results
results <- outliers_mahalanobis(x=mat, alpha=alpha,na.rm=T)
print(results)
}
multiOutliers(mtcars, "cyl", "mpg", method="mahalanobis")
multiOutliers(mtcars, "disp", "mpg", method="mahalanobis")
multiOutliers(mtcars, "wt", "drat", method="mahalanobis")
multiOutliers(mtcars, wt, drat, method="mahalanobis")
multiOutliers <- function(data, x, y, method="mahalanobis", ...){
if(method=="mahalanobis"){
#select just the rows given by the user
subset <- data %>%
select(x, y)
#make this into a matrix
mat <- matrix(subset)
#run matrix on function and store results
results <- outliers_mahalanobis(x=mat, alpha=alpha,na.rm=T)
print(results)
}
multiOutliers(mtcars, wt, drat, method="mahalanobis")
multiOutliers <- function(data, x, y, method="mahalanobis", ...){
if(method=="mahalanobis"){
#select just the rows given by the user
subset <- data %>%
select(x, y)
print(subset)
#make this into a matrix
mat <- matrix(subset)
print(mat)
#run matrix on function and store results
results <- outliers_mahalanobis(x=mat, alpha=alpha,na.rm=T)
print(results)
}
multiOutliers(mtcars, wt, drat, method="mahalanobis")
mtcars %>%
select(wt, qsec)
subset <- mtcars %>%
select(wt, qsec)
mat <- matrix(subset)
mat
mat <- as.matrix(subset)
mat
#make this into a matrix
mat <- as.matrix(subset)
multiOutliers <- function(data, x, y, method="mahalanobis", ...){
if(method=="mahalanobis"){
#select just the rows given by the user
subset <- data %>%
select(x, y)
rownames(subset) <- NULL
#make this into a matrix
mat <- as.matrix(subset)
#run matrix on function and store results
results <- outliers_mahalanobis(x=mat, alpha=alpha,na.rm=T)
print(results)
}
multiOutliers(mtcars, wt, drat, method="mahalanobis")
subset <- mtcars %>%
select(wt, qsec)
rownames(subset) <- NULL
mat <- as.matrix(subset)
mat
multiOutliers <- function(data, x, y, method="mahalanobis", ...){
if(method=="mahalanobis"){
#select just the rows given by the user
subset <- data %>%
select(x, y)
rownames(subset) <- NULL
#make this into a matrix
mat <- as.matrix(subset)
#run matrix on function and store results
results <- outliers_mahalanobis(x=mat)
print(results)
}
multiOutliers(mtcars, wt, drat, method="mahalanobis")
multiOutliers <- function(data, x, y, method="mahalanobis", ...){
if(method=="mahalanobis"){
#select just the rows given by the user
subset <- select(data$x, data$y)
#make this into a matrix
mat <- as.matrix(subset)
#run matrix on function and store results
results <- outliers_mahalanobis(x=mat)
print(results)
}
multiOutliers(mtcars, wt, drat, method="mahalanobis")
multiOutliers <- function(data, x, y, method="mahalanobis", ...){
if(method=="mahalanobis"){
#select just the rows given by the user
subset <- select(data, x, y)
#make this into a matrix
mat <- as.matrix(subset)
#run matrix on function and store results
results <- outliers_mahalanobis(x=mat)
print(results)
}
multiOutliers(mtcars, wt, drat, method="mahalanobis")
outliers_mahalanobis(mat)
outliers_mahalanobis(x = cbind(SOC, HSC))
multiOutliers <- function(data, x, y, method="mahalanobis", ...){
if(method=="mahalanobis"){
#select just the rows given by the user
subset <- select(data, x, y)
#make this into a matrix
mat <- as.matrix(subset)
#run matrix on function and store results
results <- outliers_mahalanobis(x=mat)
print(results)
}
multiOutliers <- function(data, x, y, method="mahalanobis", ...){
if(method=="mahalanobis"){
#select just the rows given by the user
subset <- select(data, x, y)
print(subset)
# #make this into a matrix
# mat <- as.matrix(subset)
#
# #run matrix on function and store results
# results <- outliers_mahalanobis(x=mat)
# print(results)
}
multiOutliers(mtcars, wt, drat, method="mahalanobis")
multiOutliers <- function(data, x, y, method="mahalanobis", ...){
if(method=="mahalanobis"){
#select just the rows given by the user
subset <- select(data, {{x}}, {{y}})
print(subset)
# #make this into a matrix
# mat <- as.matrix(subset)
#
# #run matrix on function and store results
# results <- outliers_mahalanobis(x=mat)
# print(results)
}
multiOutliers(mtcars, wt, drat, method="mahalanobis")
multiOutliers <- function(data, x, y, method="mahalanobis", ...){
if(method=="mahalanobis"){
#select just the rows given by the user
subset <- select(data, {{x}}, {{y}})
print(subset)
#make this into a matrix
mat <- as.matrix(subset)
#run matrix on function and store results
results <- outliers_mahalanobis(x=mat)
print(results)
}
multiOutliers(mtcars, wt, drat, method="mahalanobis")
